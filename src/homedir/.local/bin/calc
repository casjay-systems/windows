#!/usr/bin/env bash

SCRIPTNAME="$(basename $0)"
SCRIPTDIR="$(readlink -f -- "$(dirname -- "$0")/..")"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : calc
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : calculator wrapper for qalc
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/casjay-dotfiles/scripts/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$SCRIPTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTDIR/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$SCRIPTNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IFS=' '
ARG="$(echo "$*" | tr -d '[:space:]')"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_green "Console Based calculator"
  printf_green "Usage: calc 20*4/2+23-14"
  printf_green "Addition:       calc 1+1"
  printf_green "Subtraction:    calc 1-1"
  printf_green "Multiplication: calc 1*1"
  printf_green "Division:       calc 1/1"
  exit 1
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

check_app qalc

[ -z "$1" ] && __help
[ "$1" = "--help" ] && __help && exit

if [ "$1" = "--term" ]; then
  echo -e "\n\n\n"
  printf_cyan "Usage: 20*4/2+23-14"
  printf_red "press q or ctrl + c to exit"
  while :; do
    printf_custom_question "2" "What is it you would like to solve?  "
    read ARG
    if [ "$ARG" = "q" ]; then
      exit 0
    else
      printf_green "$(qalc "$ARG")"
    fi
  done
fi

printf_green "$(qalc "$ARG")"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
