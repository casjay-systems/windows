#!/usr/bin/env bash

SCRIPTNAME="$(basename $0)"
SCRIPTDIR="$(readlink -f -- "$(dirname -- "$0")/..")"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : gitcommit
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : commit changes to current git repo
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/casjay-dotfiles/scripts/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-$HOME/.local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$SCRIPTNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_red "Usage:"
  printf_green "init: Default init message"
  printf_green "alot: I'm to lazy to say"
  printf_green "docker, node, ruby, php, perl, python, bug, fixes"
  printf_green "Also -m --message or custom to say your own messsage"
  exit
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ ! -z "$1" ] || __help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for needed applications

check_app git

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application

if [ "$1" = "-m" ] || [ "$1" = "--m" ] || [ "$1" = "--mess" ] || [ "$1" = "--message" ]; then
  MESSAGE="$1"
  if [ -n "$2" ]; then
    newmess="$2"
  fi
else
  MESSAGE="$1"
fi

case "$MESSAGE" in
init)
  shift 1
  mess="  🦈🏠🐜❗ Initial Commit📍 🐜🦈🏠  "
  ;;
alot)
  shift 1
  mess=" 🦈🏠🐜❗ Fixes and Updates ❗🐜🦈🏠 "
  ;;
docker)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added Docker Workflow ❗🏠🦈❇🐜 "
  ;;
node)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added nodejs Workflow ❗🏠🦈❇🐜 "
  ;;
ruby)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added ruby Workflow ❗🏠🦈❇🐜 "
  ;;
php)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added php Workflow ❗🏠🦈❇🐜 "
  ;;
perl)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added perl Workflow ❗🏠🦈❇🐜 "
  ;;
python)
  shift 1
  mess=" 🐜❇🦈🏠❗ Added python Workflow ❗🏠🦈❇🐜 "
  ;;
bug)
  shift 1
  mess=" 🐛🦈🏠❗ Bug Fixes ❗🏠🦈🐛 "
  ;;
fixes)
  shift 1
  mess=" ❇🦈🏠❗ General Fixes ❗🏠🦈❇ "
  ;;
custom)
  shift 1
  if [ -n "$1" ]; then
    mess="$1"
  else
    printf_yellow "You must specify your commit message"
  fi
  ;;
*)
  if [ -n "$1" ]; then
    mess="$newmess"
  else
    shift 1
    mess=" 🦈🏠❗ Major Fixes ❗🏠🦈 "
  fi
  ;;
esac

oldpwd="$(pwd)"
gitdir="$(echo $(git rev-parse --git-dir 2>/dev/null)/..)"
repo="$(git remote -v | grep fetch | head -n 1 | awk '{print $2}' 2>/dev/null)"
[ ! -z "$repo" ] || repo="localdir"

if [ ! -d "$gitdir" ]; then
  printf_exit "Not a git repo"
  exit 1
else
  cd $gitdir
fi

printf_warning "Commiting Changes with $mess"

date +"%m%d%Y%H%M%s-git" >version.txt
if [ -f gitmasterconfig ] && [ -d .git ]; then
  cp -Rf gitmasterconfig .git/config
fi

git add .

if [ -z "$mess" ]; then
  git commit -q -S -m " 🦈🏠🐜 Fixes and Updates 🐜🦈🏠 " 2>/dev/null
else
  git commit -q -S -m "$mess" 2>/dev/null
fi
getexitcode "Successfully committed the changes"

if [ "$repo" != "localdir" ]; then
  printf_question "Should I push to $repo" [Y/n]
  read -r -n 1 -s push && echo
  if [[ $push == "y" || $choice == "Y" ]]; then
    git push -q
    getexitcode "Successfully pushed the changes for commit ID: $(git rev-parse --short HEAD)"
  fi
fi

cd $oldpwd

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
